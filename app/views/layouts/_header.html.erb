<nav class='navbar navbar-expand-lg navbar-dark navbar-custom' id='top-menu'>
  <div class='container-fluid'>
    <%= link_to 'Home', static_pages_home_path, class: 'nav-link active' %>
    <button class='navbar-toggler' type='button' data-bs-toggle='collapse'
      data-bs-target='#navbarSupportedContent' aria-controls='navbarSupportedContent'
      aria-expanded='false' aria-label='Toggle navigation'>
      <span class='navbar-toggler-icon'></span>
    </button>
    <div class='collapse navbar-collapse' id='navbarSupportedContent'>
      <ul class='navbar-nav me-auto mb-2 mb-lg-0'>
        <% if user_signed_in? %>
          <li class='nav-item'>
            <%= link_to 'My Page', user_path(id: current_user.id) ,
            class: 'nav-link active' %>
          </li>
          <li class='nav-item'>
            <%= link_to 'Projects', user_projects_path(user_id: current_user),
              class: 'nav-link active' %>
          </li>
        <% end %>
        <li class='nav-item'>
          <%= link_to 'Help', static_pages_help_path, class: 'nav-link active' %>
        </li>
      </ul>
      <ul class='navbar-nav ms-auto'>
        <% if user_signed_in? %>
          <li class='nav-items'>
            <%= link_to('#', class: 'nav-link active') do %>
              Logged in as <%= current_user.nick_name %>
            <% end %>
          </li>
          <li class='nav-item'>
            <%= link_to 'My Account', edit_user_registration_path,
            class: 'nav-link active' %>
          </li>
          <li class='nav-item'>
            <%= link_to 'Sign Out', destroy_user_session_path,
              class: 'nav-link active', data: { turbo_method: 'delete',
              turbo_confirm: 'Are you sure?' } %>
          </li>
        <% else %>
          <li class='nav-item'>
            <%= link_to 'Sign in', new_user_session_path, class: 'nav-link active' %>
          </li>
          <li class='nav-item'>
            <%= link_to 'Register', new_user_registration_path,
            class: 'nav-link active' %>
          </li>
        <% end %>
      </ul>
    </div>
  </div>
</nav>

<nav id='header' >
  <span class='hearder-search d-flex'>
    <h1 class='current-project'>
      <% if user_signed_in? && params[:user_id].present? && current_project %>
        <% project = if params[:project_id].present?
                    Project.find_by(id: params[:project_id])&.project_name
                  elsif params[:id].present?
                    Project.find_by(id: params[:id])&.project_name
                  end %>
        <%= project ||  link_to('Redmine', root_path)  %>
      <% else %>
        <%= link_to 'Redmine', root_path %>
      <% end %>
    </h1>
    <% if user_signed_in? %>
      <div id='quick-search' class='d-flex'>
        <%= form_with(url: search_user_projects_path(user_id: current_user.id),
          method: :get, class: 'd-flex') do |form| %>
          <%= form.text_field :q, class: 'form-control me-2', placeholder:
          'Search projects', aria_label: 'Search' %>
          <%= form.submit 'Search', class: 'me-1 search-btn' %>
        <% end %>
      </div>
    <% end %>
  </span>
  <br />
  <div id='main-menu' class='tabs'>
    <ul>
      <li>
        <%= link_to 'Download', static_pages_download_path %>
      </li>
      <li>
        <% if user_signed_in? %>
          <% if params[:project_id].present? && current_project %>
            <%= link_to 'Overview', project_overview_path(project_view: true,
            user_id: current_user.id, project_id: params[:project_id] ) %>
          <% else %>
            <%= link_to 'Overview', overview_path(project_view: false) %>
          <% end %>
        <% end %>
      </li>
      <% if params[:user_id].present? %>
        <% if user_signed_in? && (project = current_user.projects.find_by(
          id: params[:id]) || current_user.projects.find_by(id:
          params[:project_id])) %>
          <li>
            <%= link_to 'Roadmap', project_roadmap_path(user_id: current_user.id,
            project_id: project.id ) %>
          </li>
          <li>
            <%= link_to 'Activity', project_activity_path(user_id: current_user.id,
            project_id: project.id ) %>
          </li>
          <% if project.issue_tracking %>
            <li>
              <%= link_to 'Issues', user_project_issues_path(
                user_id: current_user.id, project_id: project.id) %>
            </li>
          <% end %>
          <% if project.project_news %>
            <li>
              <%= link_to 'News', user_project_news_index_path(
                user_id: current_user.id, project_id: project.id) %>
            </li>
          <% end %>
          <% if project.wiki %>
            <li>
              <%= link_to 'Wiki', user_project_wikis_path(
                user_id: current_user.id, project_id: project.id) %>
            </li>
          <% end %>
        <% end %>
        <li class='bell' style='margin-right: 10px; float: right;'>
          <%= link_to '', class: 'rotate', id: 'notificationLink' do %>
            <i class='bi bi-bell rotate-icon'></i>
            <span id="notificationCount"></span>
          <% end %>
        </li>

        <div class='modal fade' id='notificationModal' tabindex='-1' role='dialog'
          aria-labelledby='exampleModalLabel' aria-hidden='true'>
          <div class='modal-dialog modal-sm' role='document'>
            <div class='modal-content'>
              <div class='modal-header'>
                <h5 class='modal-title' id='exampleModalLabel' style='font-size: 12px;'>
                Notification</h5>
                <input type="checkbox" id="toggleButton">
                <label>Unread</label>

                <button type='button' class='btn-close' data-bs-dismiss='modal'
                  aria-label='Close'></button>
              </div>
              <% notification_ids = [] %>
              <div class='modal-body'>
                <% assigned_issue_ids = Issue.where("
                assignee LIKE ?", "%#{current_user.id}%").pluck(:id) %>
                <% notifications = Notification.where(issue_id: assigned_issue_ids) %>
                <% notifications.each do |notification| %>
                  <% notification_ids.push(notification.id) %>
                  <% if notification.attr_change == 'assignee' %>
                    <%= link_to(user_project_issue_path(project_id:
                    notification.issue.project.id, id: notification.issue.id),
                        class: 'notification-link') do %>
                      <%= notification.user.first_name %>
                      <br />Added
                      <% parsed_new_data = JSON.parse(notification.new_data) rescue [] %>
                      <% user_names = parsed_new_data.map { |id| User.find_by(
                        id: id)&.first_name }.compact %>
                      <% unless user_names.empty? %>
                        <%= user_names.join(', ') == current_user.first_name ?
                        'You' : user_names.join(', ') %>
                      <% end %>
                      to issue [<%= notification.issue.subject %>]
                      <hr />
                    <% end %>
                  <% elsif notification.attr_change == 'body' %>
                    <%= link_to(user_project_issue_path(project_id:
                    notification.issue.project.id, id: notification.issue.id),
                        class: 'notification-link') do %>
                      <%= notification.user.first_name %>
                      <br />Added a comment
                    <% end %>
                  <% else %>
                    <%= link_to(user_project_issue_path(project_id:
                    notification.issue.project.id, id: notification.issue.id),
                    class: 'notification-link') do %>
                      <%= notification.user.first_name %>
                    <br /> changed <%= notification.attr_change %> to
                    <%= notification.new_data %>
                    [<%= notification.issue.subject %>]
                    <% end %>
                    <hr />
                  <% end %>
                <% end %>
              </div>
            </div>
          </div>
        </div>

      <% end %>
    </ul>

  </div>
</nav>


<script>
  $(document).ready(function() {
  var previousData = [];
  function updateModalBodyContent(data) {
    if (data && Array.isArray(data) && data.length > 0) {
      var modalContent = '';
      data.forEach(function(notification) {
        var contentToAdd = '';
        if (notification.attr_change === 'assignee') {
          contentToAdd = notification.user.first_name + '<br />' +
            ' added ' + notification.new_value + ' in ' + notification.issue.subject;
        } else if (notification.attr_change === 'body') {
          contentToAdd = notification.user.first_name + '<br />' + ' added comment';
        } else {
          contentToAdd = notification.user.first_name + '<br />' +
            ' changed ' + notification.attr_change + ' in ' + notification.issue.subject;
        }
        modalContent += '<p class="notification-content">' + contentToAdd + '</p> <hr/>';
      });
      $('.modal-body').html(modalContent);
      previousData = data;
    } else {
      $('.modal-body').html('<p>No notifications found.</p>');
    }
  }
  function performAjaxRequest(checked) {
    $.ajax({
      url: '/notifications',
      type: 'GET',
      data: { checked: checked },
      dataType: 'json',
      success: function(response) {
        var modalData = response;
        console.log(modalData);
        updateModalBodyContent(modalData);
      },
      error: function(error) {
        console.error('Error:', error);
      }
    });
  }
  $('#toggleButton').on('change', function() {
    var isChecked = $(this).is(':checked');
    performAjaxRequest(isChecked);
  });
  performAjaxRequest($('#toggleButton').is(':checked'));
  });

  $(document).ready(function() {
    $('#notificationLink').on('click', function(e) {
      e.preventDefault();
      $('#notificationModal').modal('show');
    });
    $('#notificationModal').on('hidden.bs.modal', function() {
      var notificationIds = <%= raw notification_ids.to_json %>;
      if (notificationIds.length > 0) {
        $.ajax({
          url: '/notifications/mark_as_read',
          method: 'POST',
          data: { notification_ids: notificationIds },
          headers: {
            'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
          },
        });
      }
    });
  });

  function updateNotificationCount() {
    $.ajax({
      url: '/notifications/unread_count',
      method: 'GET',
      dataType: 'json',
      success: function(data) {
        var unreadCount = data.unread_count || 0;
        $('#notificationCount').text(unreadCount);
      },
      error: function(error) {
        console.error('Error fetching notification count:', error);
      }
    });
  }

  updateNotificationCount();
  setInterval(updateNotificationCount, 10000);
</script>
